package emacs.cm;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * Holds the minimum and maximum costs for the parameterized capabilities.<br>
 * <i>native declaration : cm.h:5</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("cm") 
public class parmcap extends StructObject {
	public parmcap() {
		super();
	}
	@Field(0) 
	public int mincost() {
		return this.io.getIntField(this, 0);
	}
	@Field(0) 
	public parmcap mincost(int mincost) {
		this.io.setIntField(this, 0, mincost);
		return this;
	}
	@Field(1) 
	public int maxcost() {
		return this.io.getIntField(this, 1);
	}
	@Field(1) 
	public parmcap maxcost(int maxcost) {
		this.io.setIntField(this, 1, maxcost);
		return this;
	}
}
