package emacs.cm;
import org.bridj.BridJ;
import org.bridj.CRuntime;
import org.bridj.Pointer;
import org.bridj.ann.Library;
import org.bridj.ann.Runtime;
import org.bridj.util.DefaultParameterizedType;
/**
 * Wrapper for library <b>cm</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("cm") 
@Runtime(CRuntime.class) 
public class CmLibrary {
	static {
		BridJ.register();
	}
	/**
	 * Original signature : <code>int evalcost(int)</code><br>
	 * <i>native declaration : cm.h:57</i>
	 */
	public static native int evalcost(int c);
	/**
	 * Original signature : <code>void cmcheckmagic(tty_display_info*)</code><br>
	 * <i>native declaration : cm.h:60</i>
	 */
	public static native void cmcheckmagic(Pointer<CmLibrary.tty_display_info > tty_display_infoPtr1);
	/**
	 * Original signature : <code>int cmputc(int)</code><br>
	 * <i>native declaration : cm.h:62</i>
	 */
	public static native int cmputc(int int1);
	/**
	 * Original signature : <code>void cmcostinit(tty_display_info*)</code><br>
	 * <i>native declaration : cm.h:64</i>
	 */
	public static native void cmcostinit(Pointer<CmLibrary.tty_display_info > tty_display_infoPtr1);
	/**
	 * Original signature : <code>void cmgoto(tty_display_info*, int, int)</code><br>
	 * <i>native declaration : cm.h:66</i>
	 */
	public static native void cmgoto(Pointer<CmLibrary.tty_display_info > tty_display_infoPtr1, int int1, int int2);
	/**
	 * Original signature : <code>void Wcm_clear(tty_display_info*)</code><br>
	 * <i>native declaration : cm.h:68</i>
	 */
	public static native void Wcm_clear(Pointer<CmLibrary.tty_display_info > tty_display_infoPtr1);
	/**
	 * Original signature : <code>int Wcm_init(tty_display_info*)</code><br>
	 * <i>native declaration : cm.h:70</i>
	 */
	public static native int Wcm_init(Pointer<CmLibrary.tty_display_info > tty_display_infoPtr1);
	public int cost() {
		try {
			return (int)BridJ.getNativeLibrary("cm").getSymbolPointer("cost").as(int.class).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	public CmLibrary cost(int cost) {
		try {
			{
				BridJ.getNativeLibrary("cm").getSymbolPointer("cost").as(int.class).set(cost);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern tty_display_info*
	public Pointer<CmLibrary.tty_display_info > current_tty() {
		try {
			return (Pointer<CmLibrary.tty_display_info >)BridJ.getNativeLibrary("cm").getSymbolPointer("current_tty").as(DefaultParameterizedType.paramType(Pointer.class, CmLibrary.tty_display_info.class)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern tty_display_info*
	public CmLibrary current_tty(Pointer<CmLibrary.tty_display_info > current_tty) {
		try {
			{
				BridJ.getNativeLibrary("cm").getSymbolPointer("current_tty").as(DefaultParameterizedType.paramType(Pointer.class, CmLibrary.tty_display_info.class)).set(current_tty);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// Undefined type
	/// Undefined type
	public static interface tty_display_info {
		
	};
}
