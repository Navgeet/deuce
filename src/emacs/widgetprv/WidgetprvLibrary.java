package emacs.widgetprv;
import org.bridj.BridJ;
import org.bridj.CRuntime;
import org.bridj.Callback;
import org.bridj.Pointer;
import org.bridj.TypedPointer;
import org.bridj.ann.CLong;
import org.bridj.ann.Library;
import org.bridj.ann.Runtime;
import org.bridj.util.DefaultParameterizedType;
/**
 * Wrapper for library <b>widgetprv</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("widgetprv") 
@Runtime(CRuntime.class) 
public class WidgetprvLibrary {
	static {
		BridJ.register();
	}
	/// <i>native declaration : widget.h</i>
	public static final String XtNgcPointer = (String)"gcPointer";
	/// <i>native declaration : widget.h</i>
	public static final String XtNspacePointer = (String)"spacePointer";
	/// <i>native declaration : widget.h</i>
	public static final String XtCForeground = (String)"Foreground";
	/// <i>native declaration : widget.h</i>
	public static final String XtNinitialGeometry = (String)"initialGeometry";
	/// <i>native declaration : widget.h</i>
	public static final String XtNmodeLinePointer = (String)"modePointer";
	/// <i>native declaration : widget.h</i>
	public static final String XtNinternalBorderWidth = (String)"internalBorderWidth";
	/// <i>native declaration : widget.h</i>
	public static final String XtNminibuffer = (String)"minibuffer";
	/// <i>native declaration : widget.h</i>
	public static final String XtNforeground = (String)"foreground";
	/// <i>native declaration : widget.h</i>
	public static final String XtCInitialGeometry = (String)"InitialGeometry";
	/// <i>native declaration : widget.h</i>
	public static final String XtNvisualBell = (String)"visualBell";
	/// <i>native declaration : widget.h</i>
	public static final String XtNtextPointer = (String)"textPointer";
	/// <i>native declaration : widget.h</i>
	public static final String XtNfont = (String)"font";
	/// <i>native declaration : widget.h</i>
	public static final String XtNgeometry = (String)"geometry";
	/// <i>native declaration : widget.h</i>
	public static final String XtCInternalBorderWidth = (String)"InternalBorderWidth";
	/// <i>native declaration : widget.h</i>
	public static final String XtCVisualBell = (String)"VisualBell";
	/// <i>native declaration : widget.h</i>
	public static final String XtCMinibuffer = (String)"Minibuffer";
	/// <i>native declaration : widget.h</i>
	public static final String XtCInterline = (String)"Interline";
	/// <i>native declaration : widget.h</i>
	public static final String XtCBarCursor = (String)"BarCursor";
	/// <i>native declaration : widget.h</i>
	public static final String XtNbellVolume = (String)"bellVolume";
	/// <i>native declaration : widget.h</i>
	public static final String XtNcursorColor = (String)"cursorColor";
	/// <i>native declaration : widget.h</i>
	public static final String XtCFont = (String)"Font";
	/// <i>native declaration : widget.h</i>
	public static final String XtCCursorColor = (String)"CursorColor";
	/// <i>native declaration : widget.h</i>
	public static final String XtNemacsFrame = (String)"emacsFrame";
	/// <i>native declaration : widget.h</i>
	public static final String XtCGeometry = (String)"Geometry";
	/// <i>native declaration : widget.h</i>
	public static final String XtCBellVolume = (String)"BellVolume";
	/// <i>native declaration : widget.h</i>
	public static final String XtCUnsplittable = (String)"Unsplittable";
	/// <i>native declaration : widget.h</i>
	public static final String XtNresizeToPreferred = (String)"resizeToPreferred";
	/// <i>native declaration : widget.h</i>
	public static final String XtNpointerColor = (String)"pointerColor";
	/// <i>native declaration : widget.h</i>
	public static final String XtCEmacsFrame = (String)"EmacsFrame";
	/// <i>native declaration : widget.h</i>
	public static final String XtNinterline = (String)"interline";
	/// <i>native declaration : widget.h</i>
	public static final String XtNallowResize = (String)"allowResize";
	/// <i>native declaration : widget.h</i>
	public static final String XtNunsplittable = (String)"unsplittable";
	/// <i>native declaration : widget.h</i>
	public static final String XtNpointerBackground = (String)"pointerBackground";
	/// <i>native declaration : widget.h</i>
	public static final String XtNshowGrip = (String)"showGrip";
	/// <i>native declaration : widget.h</i>
	public static final String XtNbarCursor = (String)"barCursor";
	/// <i>native declaration : widgetprv.h:1093</i>
	/// <i>native declaration : widgetprv.h:1093</i>
	public static abstract class XIMProc extends Callback<XIMProc > {
		public abstract void apply(WidgetprvLibrary.XIM XIM1, Pointer<Byte > XPointer1, Pointer<Byte > XPointer2);
	};
	/// <i>native declaration : widgetprv.h:1094</i>
	/// <i>native declaration : widgetprv.h:1094</i>
	public static abstract class XICProc extends Callback<XICProc > {
		public abstract int apply(WidgetprvLibrary.XIC XIC1, Pointer<Byte > XPointer1, Pointer<Byte > XPointer2);
	};
	/// <i>native declaration : widgetprv.h:1095</i>
	/// <i>native declaration : widgetprv.h:1095</i>
	public static abstract class XIDProc extends Callback<XIDProc > {
		public abstract void apply(Pointer<WidgetprvLibrary._XDisplay > DisplayPtr1, Pointer<Byte > XPointer1, Pointer<Byte > XPointer2);
	};
	/**
	 * WARNING, this type not in Xlib spec<br>
	 * <i>native declaration : widgetprv.h:1382</i>
	 */
	/**
	 * WARNING, this type not in Xlib spec<br>
	 * <i>native declaration : widgetprv.h:1382</i>
	 */
	public static abstract class XErrorHandler extends Callback<XErrorHandler > {
		public abstract int apply(Pointer<WidgetprvLibrary._XDisplay > DisplayPtr1, Pointer<? > XErrorEventPtr1);
	};
	/**
	 * WARNING, this type not in Xlib spec<br>
	 * <i>native declaration : widgetprv.h:1385</i>
	 */
	/**
	 * WARNING, this type not in Xlib spec<br>
	 * <i>native declaration : widgetprv.h:1385</i>
	 */
	public static abstract class XIOErrorHandler extends Callback<XIOErrorHandler > {
		public abstract int apply(Pointer<WidgetprvLibrary._XDisplay > DisplayPtr1);
	};
	/// <i>native declaration : widgetprv.h:2020</i>
	/// <i>native declaration : widgetprv.h:2020</i>
	public static abstract class XConnectionWatchProc extends Callback<XConnectionWatchProc > {
		/// @param int2 open or close flag
		public abstract void apply(Pointer<WidgetprvLibrary._XDisplay > DisplayPtr1, Pointer<Byte > XPointer1, int int1, int int2, Pointer<Pointer<Byte > > XPointerPtr1);
	};
	/// <i>native declaration : widgetprv.h:2669</i>
	/// <i>native declaration : widgetprv.h:2669</i>
	public static abstract class XtOrderProc extends Callback<XtOrderProc > {
		public abstract int apply(Pointer<? > Widget1);
	};
	/// <i>native declaration : widgetprv.h:2701</i>
	/// <i>native declaration : widgetprv.h:2701</i>
	public static abstract class XtActionProc extends Callback<XtActionProc > {
		public abstract void apply(Pointer<? > Widget1, Pointer<WidgetprvLibrary.XEvent > XEventPtr1, Pointer<Pointer<Byte > > StringPtr1, Pointer<Integer > CardinalPtr1);
	};
	/// <i>native declaration : widgetprv.h:2723</i>
	/// <i>native declaration : widgetprv.h:2723</i>
	public static abstract class XtConvertArgProc extends Callback<XtConvertArgProc > {
		public abstract void apply(Pointer<? > Widget1, Pointer<Integer > CardinalPtr1, Pointer<? > XrmValuePtr1);
	};
	/**
	 * obsolete<br>
	 * <i>native declaration : widgetprv.h:2734</i>
	 */
	/**
	 * obsolete<br>
	 * <i>native declaration : widgetprv.h:2734</i>
	 */
	public static abstract class XtConverter extends Callback<XtConverter > {
		public abstract void apply(Pointer<? > XrmValuePtr1, Pointer<Integer > CardinalPtr1, Pointer<? > XrmValuePtr2, Pointer<? > XrmValuePtr3);
	};
	/// <i>native declaration : widgetprv.h:2735</i>
	/// <i>native declaration : widgetprv.h:2735</i>
	public static abstract class XtTypeConverter extends Callback<XtTypeConverter > {
		public abstract boolean apply(Pointer<WidgetprvLibrary._XDisplay > DisplayPtr1, Pointer<? > XrmValuePtr1, Pointer<Integer > CardinalPtr1, Pointer<? > XrmValuePtr2, Pointer<? > XrmValuePtr3, Pointer<Pointer<? > > XtPointerPtr1);
	};
	/// <i>native declaration : widgetprv.h:2736</i>
	/// <i>native declaration : widgetprv.h:2736</i>
	public static abstract class XtDestructor extends Callback<XtDestructor > {
		public abstract void apply(WidgetprvLibrary.XtAppContext XtAppContext1, Pointer<? > XrmValuePtr1, Pointer<? > XtPointer1, Pointer<? > XrmValuePtr2, Pointer<Integer > CardinalPtr1);
	};
	/// <i>native declaration : widgetprv.h:2739</i>
	/// <i>native declaration : widgetprv.h:2739</i>
	public static abstract class XtActionHookProc extends Callback<XtActionHookProc > {
		public abstract void apply(Pointer<? > Widget1, Pointer<? > XtPointer1, Pointer<Byte > String1, Pointer<WidgetprvLibrary.XEvent > XEventPtr1, Pointer<Pointer<Byte > > StringPtr1, Pointer<Integer > CardinalPtr1);
	};
	/// <i>native declaration : widgetprv.h:2741</i>
	/// <i>native declaration : widgetprv.h:2741</i>
	public static abstract class XtBlockHookProc extends Callback<XtBlockHookProc > {
		public abstract void apply(Pointer<? > XtPointer1);
	};
	/// <i>native declaration : widgetprv.h:2742</i>
	/// <i>native declaration : widgetprv.h:2742</i>
	public static abstract class XtKeyProc extends Callback<XtKeyProc > {
		public abstract void apply(Pointer<WidgetprvLibrary._XDisplay > DisplayPtr1, byte KeyCode1, int Modifiers1, Pointer<Integer > ModifiersPtr1, Pointer<CLong > KeySymPtr1);
	};
	/// <i>native declaration : widgetprv.h:2743</i>
	/// <i>native declaration : widgetprv.h:2743</i>
	public static abstract class XtCaseProc extends Callback<XtCaseProc > {
		public abstract void apply(Pointer<WidgetprvLibrary._XDisplay > DisplayPtr1, @CLong long KeySym1, Pointer<CLong > KeySymPtr1, Pointer<CLong > KeySymPtr2);
	};
	/// <i>native declaration : widgetprv.h:2744</i>
	/// <i>native declaration : widgetprv.h:2744</i>
	public static abstract class XtEventHandler extends Callback<XtEventHandler > {
		public abstract void apply(Pointer<? > Widget1, Pointer<? > XtPointer1, Pointer<WidgetprvLibrary.XEvent > XEventPtr1, Pointer<Boolean > BooleanPtr1);
	};
	/// <i>native declaration : widgetprv.h:2751</i>
	/// <i>native declaration : widgetprv.h:2751</i>
	public static abstract class XtTimerCallbackProc extends Callback<XtTimerCallbackProc > {
		public abstract void apply(Pointer<? > XtPointer1, Pointer<CLong > XtIntervalIdPtr1);
	};
	/// <i>native declaration : widgetprv.h:2752</i>
	/// <i>native declaration : widgetprv.h:2752</i>
	public static abstract class XtInputCallbackProc extends Callback<XtInputCallbackProc > {
		public abstract void apply(Pointer<? > XtPointer1, Pointer<Integer > intPtr1, Pointer<CLong > XtInputIdPtr1);
	};
	/// <i>native declaration : widgetprv.h:2753</i>
	/// <i>native declaration : widgetprv.h:2753</i>
	public static abstract class XtSignalCallbackProc extends Callback<XtSignalCallbackProc > {
		public abstract void apply(Pointer<? > XtPointer1, Pointer<CLong > XtSignalIdPtr1);
	};
	/// <i>native declaration : widgetprv.h:2760</i>
	/// <i>native declaration : widgetprv.h:2760</i>
	public static abstract class XtCallbackProc extends Callback<XtCallbackProc > {
		/// @param XtPointer1 data the application registered
		public abstract void apply(Pointer<? > Widget1, Pointer<? > XtPointer1, Pointer<? > XtPointer2);
	};
	/// <i>native declaration : widgetprv.h:2797</i>
	/// <i>native declaration : widgetprv.h:2797</i>
	public static abstract class XtResourceDefaultProc extends Callback<XtResourceDefaultProc > {
		public abstract void apply(Pointer<? > Widget1, int int1, Pointer<? > XrmValuePtr1);
	};
	/// <i>native declaration : widgetprv.h:2798</i>
	/// <i>native declaration : widgetprv.h:2798</i>
	public static abstract class XtLanguageProc extends Callback<XtLanguageProc > {
		public abstract Pointer<Byte > apply(Pointer<WidgetprvLibrary._XDisplay > DisplayPtr1, Pointer<Byte > String1, Pointer<? > XtPointer1);
	};
	/// <i>native declaration : widgetprv.h:2799</i>
	/// <i>native declaration : widgetprv.h:2799</i>
	public static abstract class XtErrorMsgHandler extends Callback<XtErrorMsgHandler > {
		public abstract void apply(Pointer<Byte > String1, Pointer<Byte > String2, Pointer<Byte > String3, Pointer<Byte > String4, Pointer<Pointer<Byte > > StringPtr1, Pointer<Integer > CardinalPtr1);
	};
	/// <i>native declaration : widgetprv.h:2800</i>
	/// <i>native declaration : widgetprv.h:2800</i>
	public static abstract class XtErrorHandler extends Callback<XtErrorHandler > {
		public abstract void apply(Pointer<Byte > String1);
	};
	/// <i>native declaration : widgetprv.h:2801</i>
	/// <i>native declaration : widgetprv.h:2801</i>
	public static abstract class XtCreatePopupChildProc extends Callback<XtCreatePopupChildProc > {
		public abstract void apply(Pointer<? > Widget1);
	};
	/// <i>native declaration : widgetprv.h:2802</i>
	/// <i>native declaration : widgetprv.h:2802</i>
	public static abstract class XtWorkProc extends Callback<XtWorkProc > {
		public abstract boolean apply(Pointer<? > XtPointer1);
	};
	/// <i>native declaration : widgetprv.h:2808</i>
	/// <i>native declaration : widgetprv.h:2808</i>
	public static abstract class XtFilePredicate extends Callback<XtFilePredicate > {
		public abstract boolean apply(Pointer<Byte > String1);
	};
	/// <i>native declaration : widgetprv.h:2810</i>
	/// <i>native declaration : widgetprv.h:2810</i>
	public static abstract class XtConvertSelectionProc extends Callback<XtConvertSelectionProc > {
		public abstract boolean apply(Pointer<? > Widget1, Pointer<CLong > AtomPtr1, Pointer<CLong > AtomPtr2, Pointer<CLong > AtomPtr3, Pointer<Pointer<? > > XtPointerPtr1, Pointer<CLong > uPtr1, Pointer<Integer > intPtr1);
	};
	/// <i>native declaration : widgetprv.h:2811</i>
	/// <i>native declaration : widgetprv.h:2811</i>
	public static abstract class XtLoseSelectionProc extends Callback<XtLoseSelectionProc > {
		public abstract void apply(Pointer<? > Widget1, Pointer<CLong > AtomPtr1);
	};
	/// <i>native declaration : widgetprv.h:2812</i>
	/// <i>native declaration : widgetprv.h:2812</i>
	public static abstract class XtSelectionDoneProc extends Callback<XtSelectionDoneProc > {
		public abstract void apply(Pointer<? > Widget1, Pointer<CLong > AtomPtr1, Pointer<CLong > AtomPtr2);
	};
	/// <i>native declaration : widgetprv.h:2813</i>
	/// <i>native declaration : widgetprv.h:2813</i>
	public static abstract class XtSelectionCallbackProc extends Callback<XtSelectionCallbackProc > {
		public abstract void apply(Pointer<? > Widget1, Pointer<? > XtPointer1, Pointer<CLong > AtomPtr1, Pointer<CLong > AtomPtr2, Pointer<? > XtPointer2, Pointer<CLong > uPtr1, Pointer<Integer > intPtr1);
	};
	/// <i>native declaration : widgetprv.h:2814</i>
	/// <i>native declaration : widgetprv.h:2814</i>
	public static abstract class XtLoseSelectionIncrProc extends Callback<XtLoseSelectionIncrProc > {
		public abstract void apply(Pointer<? > Widget1, Pointer<CLong > AtomPtr1, Pointer<? > XtPointer1);
	};
	/// <i>native declaration : widgetprv.h:2815</i>
	/// <i>native declaration : widgetprv.h:2815</i>
	public static abstract class XtSelectionDoneIncrProc extends Callback<XtSelectionDoneIncrProc > {
		public abstract void apply(Pointer<? > Widget1, Pointer<CLong > AtomPtr1, Pointer<CLong > AtomPtr2, Pointer<Pointer<? > > XtRequestIdPtr1, Pointer<? > XtPointer1);
	};
	/// <i>native declaration : widgetprv.h:2816</i>
	/// <i>native declaration : widgetprv.h:2816</i>
	public static abstract class XtConvertSelectionIncrProc extends Callback<XtConvertSelectionIncrProc > {
		public abstract boolean apply(Pointer<? > Widget1, Pointer<CLong > AtomPtr1, Pointer<CLong > AtomPtr2, Pointer<CLong > AtomPtr3, Pointer<Pointer<? > > XtPointerPtr1, Pointer<CLong > uPtr1, Pointer<Integer > intPtr1, Pointer<CLong > uPtr2, Pointer<? > XtPointer1, Pointer<Pointer<? > > XtRequestIdPtr1);
	};
	/// <i>native declaration : widgetprv.h:2817</i>
	/// <i>native declaration : widgetprv.h:2817</i>
	public static abstract class XtCancelConvertSelectionProc extends Callback<XtCancelConvertSelectionProc > {
		public abstract void apply(Pointer<? > Widget1, Pointer<CLong > AtomPtr1, Pointer<CLong > AtomPtr2, Pointer<Pointer<? > > XtRequestIdPtr1, Pointer<? > XtPointer1);
	};
	/// <i>native declaration : widgetprv.h:2818</i>
	/// <i>native declaration : widgetprv.h:2818</i>
	public static abstract class XtEventDispatchProc extends Callback<XtEventDispatchProc > {
		public abstract boolean apply(Pointer<WidgetprvLibrary.XEvent > XEventPtr1);
	};
	/// <i>native declaration : widgetprv.h:2819</i>
	/// <i>native declaration : widgetprv.h:2819</i>
	public static abstract class XtExtensionSelectProc extends Callback<XtExtensionSelectProc > {
		public abstract void apply(Pointer<? > Widget1, Pointer<Integer > intPtr1, Pointer<Pointer<? > > XtPointerPtr1, int int1, Pointer<? > XtPointer1);
	};
	/// <i>native declaration : widgetprv.h:3742</i>
	/// <i>native declaration : widgetprv.h:3742</i>
	public static abstract class XtProc extends Callback<XtProc > {
		public abstract void apply();
	};
	/// <i>native declaration : widgetprv.h:3743</i>
	/// <i>native declaration : widgetprv.h:3743</i>
	public static abstract class XtWidgetClassProc extends Callback<XtWidgetClassProc > {
		public abstract void apply(Pointer<? > WidgetClass1);
	};
	/// <i>native declaration : widgetprv.h:3744</i>
	/// <i>native declaration : widgetprv.h:3744</i>
	public static abstract class XtWidgetProc extends Callback<XtWidgetProc > {
		public abstract void apply(Pointer<? > Widget1);
	};
	/// <i>native declaration : widgetprv.h:3745</i>
	/// <i>native declaration : widgetprv.h:3745</i>
	public static abstract class XtAcceptFocusProc extends Callback<XtAcceptFocusProc > {
		public abstract boolean apply(Pointer<? > Widget1, Pointer<CLong > TimePtr1);
	};
	/// <i>native declaration : widgetprv.h:3746</i>
	/// <i>native declaration : widgetprv.h:3746</i>
	public static abstract class XtArgsProc extends Callback<XtArgsProc > {
		public abstract void apply(Pointer<? > Widget1, Pointer<ArgList_struct > ArgList1, Pointer<Integer > CardinalPtr1);
	};
	/// <i>native declaration : widgetprv.h:3747</i>
	/// <i>native declaration : widgetprv.h:3747</i>
	public static abstract class XtInitProc extends Callback<XtInitProc > {
		public abstract void apply(Pointer<? > Widget1, Pointer<? > Widget2, Pointer<ArgList_struct > ArgList1, Pointer<Integer > CardinalPtr1);
	};
	/// <i>native declaration : widgetprv.h:3748</i>
	/// <i>native declaration : widgetprv.h:3748</i>
	public static abstract class XtSetValuesFunc extends Callback<XtSetValuesFunc > {
		public abstract boolean apply(Pointer<? > Widget1, Pointer<? > Widget2, Pointer<? > Widget3, Pointer<ArgList_struct > ArgList1, Pointer<Integer > CardinalPtr1);
	};
	/// <i>native declaration : widgetprv.h:3749</i>
	/// <i>native declaration : widgetprv.h:3749</i>
	public static abstract class XtArgsFunc extends Callback<XtArgsFunc > {
		public abstract boolean apply(Pointer<? > Widget1, Pointer<ArgList_struct > ArgList1, Pointer<Integer > CardinalPtr1);
	};
	/// <i>native declaration : widgetprv.h:3750</i>
	/// <i>native declaration : widgetprv.h:3750</i>
	public static abstract class XtAlmostProc extends Callback<XtAlmostProc > {
		public abstract void apply(Pointer<? > Widget1, Pointer<? > Widget2, Pointer<? > XtWidgetGeometryPtr1, Pointer<? > XtWidgetGeometryPtr2);
	};
	/// <i>native declaration : widgetprv.h:3751</i>
	/// <i>native declaration : widgetprv.h:3751</i>
	public static abstract class XtExposeProc extends Callback<XtExposeProc > {
		public abstract void apply(Pointer<? > Widget1, Pointer<WidgetprvLibrary.XEvent > XEventPtr1, WidgetprvLibrary.Region Region1);
	};
	/// <i>native declaration : widgetprv.h:3752</i>
	/// <i>native declaration : widgetprv.h:3752</i>
	public static abstract class XtRealizeProc extends Callback<XtRealizeProc > {
		public abstract void apply(Pointer<? > Widget1, Pointer<CLong > XtValueMaskPtr1, Pointer<? > XSetWindowAttributesPtr1);
	};
	/// <i>native declaration : widgetprv.h:3753</i>
	/// <i>native declaration : widgetprv.h:3753</i>
	public static abstract class XtGeometryHandler extends Callback<XtGeometryHandler > {
		/**
		 * SKIPPED:<br>
		 * <i>native declaration : widgetprv.h</i><br>
		 * XtGeometryResult XtGeometryHandler(Widget Widget1, XtWidgetGeometry* XtWidgetGeometryPtr1, XtWidgetGeometry* XtWidgetGeometryPtr2);<br>
		 * Conversion Error : XtGeometryResult (Unsupported type)
		 */
	};
	/// <i>native declaration : widgetprv.h:3754</i>
	/// <i>native declaration : widgetprv.h:3754</i>
	public static abstract class XtStringProc extends Callback<XtStringProc > {
		public abstract void apply(Pointer<? > Widget1, Pointer<Byte > String1);
	};
	/// <i>native declaration : widgetprv.h:3762</i>
	/// <i>native declaration : widgetprv.h:3762</i>
	public static abstract class XtAllocateProc extends Callback<XtAllocateProc > {
		public abstract void apply(Pointer<? > WidgetClass1, Pointer<Integer > CardinalPtr1, Pointer<Integer > CardinalPtr2, Pointer<ArgList_struct > ArgList1, Pointer<Integer > CardinalPtr3, Pointer<XtTypedArgList_struct > XtTypedArgList1, Pointer<Integer > CardinalPtr4, Pointer<Pointer<? > > WidgetPtr1, Pointer<Pointer<? > > XtPointerPtr1);
	};
	/// <i>native declaration : widgetprv.h:3763</i>
	/// <i>native declaration : widgetprv.h:3763</i>
	public static abstract class XtDeallocateProc extends Callback<XtDeallocateProc > {
		public abstract void apply(Pointer<? > Widget1, Pointer<? > XtPointer1);
	};
	/// <i>native declaration : widgetprv.h:4213</i>
	/// <i>native declaration : widgetprv.h:4213</i>
	public static abstract class XSynchronize_callback extends Callback<XSynchronize_callback > {
		public abstract int apply(Pointer<WidgetprvLibrary._XDisplay > DisplayPtr1);
	};
	/// <i>native declaration : widgetprv.h:4214</i>
	/// <i>native declaration : widgetprv.h:4214</i>
	public static abstract class XSetAfterFunction_callback extends Callback<XSetAfterFunction_callback > {
		public abstract int apply(Pointer<WidgetprvLibrary._XDisplay > DisplayPtr1);
	};
	/**
	 * Special entry points<br>
	 * Original signature : <code>void EmacsFrameSetCharSize(Widget, int, int)</code><br>
	 * <i>native declaration : widget.h:4130</i>
	 */
	public static native void EmacsFrameSetCharSize(Pointer<? > Widget1, int int1, int int2);
	/**
	 * Original signature : <code>void widget_store_internal_border(Widget)</code><br>
	 * <i>native declaration : widget.h:4132</i>
	 */
	public static native void widget_store_internal_border(Pointer<? > widget);
	/**
	 * Original signature : <code>void widget_update_wm_size_hints(Widget)</code><br>
	 * <i>native declaration : widget.h:4134</i>
	 */
	public static native void widget_update_wm_size_hints(Pointer<? > widget);
	public int _Xdebug() {
		try {
			return (int)BridJ.getNativeLibrary("widgetprv").getSymbolPointer("_Xdebug").as(int.class).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	public WidgetprvLibrary _Xdebug(int _Xdebug) {
		try {
			{
				BridJ.getNativeLibrary("widgetprv").getSymbolPointer("_Xdebug").as(int.class).set(_Xdebug);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern WidgetClass
	public Pointer<? > compositeWidgetClass() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("widgetprv").getSymbolPointer("compositeWidgetClass").as(DefaultParameterizedType.paramType(Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern WidgetClass
	public WidgetprvLibrary compositeWidgetClass(Pointer<? > compositeWidgetClass) {
		try {
			{
				BridJ.getNativeLibrary("widgetprv").getSymbolPointer("compositeWidgetClass").as(DefaultParameterizedType.paramType(Pointer.class, null)).set(compositeWidgetClass);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern WidgetClass
	public Pointer<? > emacsFrameClass() {
		try {
			return (Pointer<? >)BridJ.getNativeLibrary("widgetprv").getSymbolPointer("emacsFrameClass").as(DefaultParameterizedType.paramType(Pointer.class, null)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern WidgetClass
	public WidgetprvLibrary emacsFrameClass(Pointer<? > emacsFrameClass) {
		try {
			{
				BridJ.getNativeLibrary("widgetprv").getSymbolPointer("emacsFrameClass").as(DefaultParameterizedType.paramType(Pointer.class, null)).set(emacsFrameClass);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern _DisplayContext*
	public Pointer<WidgetprvLibrary._DisplayContext > display_context() {
		try {
			return (Pointer<WidgetprvLibrary._DisplayContext >)BridJ.getNativeLibrary("widgetprv").getSymbolPointer("display_context").as(DefaultParameterizedType.paramType(Pointer.class, WidgetprvLibrary._DisplayContext.class)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern _DisplayContext*
	public WidgetprvLibrary display_context(Pointer<WidgetprvLibrary._DisplayContext > display_context) {
		try {
			{
				BridJ.getNativeLibrary("widgetprv").getSymbolPointer("display_context").as(DefaultParameterizedType.paramType(Pointer.class, WidgetprvLibrary._DisplayContext.class)).set(display_context);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// Pointer to unknown (opaque) type
	/// Pointer to unknown (opaque) type
	public static class Region extends TypedPointer {
		public Region(long address) {
			super(address);
		}
		public Region(Pointer address) {
			super(address);
		}
	};
	/// Pointer to unknown (opaque) type
	/// Pointer to unknown (opaque) type
	public static class XtAppContext extends TypedPointer {
		public XtAppContext(long address) {
			super(address);
		}
		public XtAppContext(Pointer address) {
			super(address);
		}
	};
	/// Pointer to unknown (opaque) type
	/// Pointer to unknown (opaque) type
	public static class XIC extends TypedPointer {
		public XIC(long address) {
			super(address);
		}
		public XIC(Pointer address) {
			super(address);
		}
	};
	/// Pointer to unknown (opaque) type
	/// Pointer to unknown (opaque) type
	public static class XIM extends TypedPointer {
		public XIM(long address) {
			super(address);
		}
		public XIM(Pointer address) {
			super(address);
		}
	};
	/// Undefined type
	/// Undefined type
	public static interface _XtAppStruct {
		
	};
	/// Undefined type
	/// Undefined type
	public static interface font {
		
	};
	/// Undefined type
	/// Undefined type
	public static interface CorePart {
		
	};
	/// Undefined type
	/// Undefined type
	public static interface _XDisplay {
		
	};
	/// Undefined type
	/// Undefined type
	public static interface _XIM {
		
	};
	/// Undefined type
	/// Undefined type
	public static interface _XRegion {
		
	};
	/// Undefined type
	/// Undefined type
	public static interface XExtData {
		
	};
	/// Undefined type
	/// Undefined type
	public static interface frame {
		
	};
	/// Undefined type
	/// Undefined type
	public static interface _XrmHashBucketRec {
		
	};
	/// Undefined type
	/// Undefined type
	public static interface CoreClassPart {
		
	};
	/// Undefined type
	/// Undefined type
	public static interface _DisplayContext {
		
	};
	/// Undefined type
	/// Undefined type
	public static interface _XIC {
		
	};
	/// Undefined type
	/// Undefined type
	public static interface XEvent {
		
	};
	/// Undefined type
	/// Undefined type
	public static interface _XPrivate {
		
	};
}
