package emacs.syssignal;
import org.bridj.BridJ;
import org.bridj.CRuntime;
import org.bridj.Callback;
import org.bridj.Pointer;
import org.bridj.ann.Library;
import org.bridj.ann.Runtime;
/**
 * Wrapper for library <b>syssignal</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("syssignal") 
@Runtime(CRuntime.class) 
public class SyssignalLibrary {
	static {
		BridJ.register();
	}
	/**
	 * Whether this is what all systems want or not, this is what<br>
	 * appears to be assumed in the source, for example data.c:arith_error.<br>
	 * <i>native declaration : syssignal.h:7</i>
	 */
	/**
	 * Whether this is what all systems want or not, this is what<br>
	 * appears to be assumed in the source, for example data.c:arith_error.<br>
	 * <i>native declaration : syssignal.h:7</i>
	 */
	public static abstract class signal_handler_t extends Callback<signal_handler_t > {
		public abstract void apply(int int1);
	};
	/**
	 * Original signature : <code>void init_signals()</code><br>
	 * <i>native declaration : syssignal.h:1</i>
	 */
	public static native void init_signals();
	/**
	 * Original signature : <code>signal_handler_t sys_signal(int, signal_handler_t)</code><br>
	 * <i>native declaration : syssignal.h:9</i>
	 */
	public static native Pointer<SyssignalLibrary.signal_handler_t > sys_signal(int signal_number, Pointer<SyssignalLibrary.signal_handler_t > action);
	/**
	 * Original signature : <code>sigset_t sys_sigblock(sigset_t)</code><br>
	 * <i>native declaration : syssignal.h:11</i>
	 */
	public static native SyssignalLibrary.sigset_t sys_sigblock(SyssignalLibrary.sigset_t new_mask);
	/**
	 * Original signature : <code>sigset_t sys_sigunblock(sigset_t)</code><br>
	 * <i>native declaration : syssignal.h:13</i>
	 */
	public static native SyssignalLibrary.sigset_t sys_sigunblock(SyssignalLibrary.sigset_t new_mask);
	/**
	 * Original signature : <code>sigset_t sys_sigsetmask(sigset_t)</code><br>
	 * <i>native declaration : syssignal.h:15</i>
	 */
	public static native SyssignalLibrary.sigset_t sys_sigsetmask(SyssignalLibrary.sigset_t new_mask);
	/**
	 * strsignal is in sysdep.c<br>
	 * Original signature : <code>char* strsignal(int)</code><br>
	 * <i>native declaration : syssignal.h:21</i>
	 */
	public static native Pointer<Byte > strsignal(int int1);
	/// Conversion Error : null (void type !)
	/// Undefined type
	/// Undefined type
	public static interface sigset_t {
		
	};
}
