package emacs.widget;
import org.bridj.BridJ;
import org.bridj.CRuntime;
import org.bridj.Pointer;
import org.bridj.ann.Library;
import org.bridj.ann.Runtime;
import org.bridj.util.DefaultParameterizedType;
/**
 * Wrapper for library <b>widget</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("widget") 
@Runtime(CRuntime.class) 
public class WidgetLibrary {
	static {
		BridJ.register();
	}
	/// <i>native declaration : widget.h</i>
	public static final String XtCUnsplittable = (String)"Unsplittable";
	/// <i>native declaration : widget.h</i>
	public static final String XtCInternalBorderWidth = (String)"InternalBorderWidth";
	/// <i>native declaration : widget.h</i>
	public static final String XtCFont = (String)"Font";
	/// <i>native declaration : widget.h</i>
	public static final String XtCCursorColor = (String)"CursorColor";
	/// <i>native declaration : widget.h</i>
	public static final String XtCBarCursor = (String)"BarCursor";
	/// <i>native declaration : widget.h</i>
	public static final String XtNspacePointer = (String)"spacePointer";
	/// <i>native declaration : widget.h</i>
	public static final String XtCInitialGeometry = (String)"InitialGeometry";
	/// <i>native declaration : widget.h</i>
	public static final String XtNpointerBackground = (String)"pointerBackground";
	/// <i>native declaration : widget.h</i>
	public static final String XtNgcPointer = (String)"gcPointer";
	/// <i>native declaration : widget.h</i>
	public static final String XtCGeometry = (String)"Geometry";
	/// <i>native declaration : widget.h</i>
	public static final String XtNvisualBell = (String)"visualBell";
	/// <i>native declaration : widget.h</i>
	public static final String XtNshowGrip = (String)"showGrip";
	/// <i>native declaration : widget.h</i>
	public static final String XtNmodeLinePointer = (String)"modePointer";
	/// <i>native declaration : widget.h</i>
	public static final String XtNallowResize = (String)"allowResize";
	/// <i>native declaration : widget.h</i>
	public static final String XtNbarCursor = (String)"barCursor";
	/// <i>native declaration : widget.h</i>
	public static final String XtNinterline = (String)"interline";
	/// <i>native declaration : widget.h</i>
	public static final String XtCMinibuffer = (String)"Minibuffer";
	/// <i>native declaration : widget.h</i>
	public static final String XtNemacsFrame = (String)"emacsFrame";
	/// <i>native declaration : widget.h</i>
	public static final String XtCEmacsFrame = (String)"EmacsFrame";
	/// <i>native declaration : widget.h</i>
	public static final String XtCForeground = (String)"Foreground";
	/// <i>native declaration : widget.h</i>
	public static final String XtNresizeToPreferred = (String)"resizeToPreferred";
	/// <i>native declaration : widget.h</i>
	public static final String XtCInterline = (String)"Interline";
	/// <i>native declaration : widget.h</i>
	public static final String XtNbellVolume = (String)"bellVolume";
	/// <i>native declaration : widget.h</i>
	public static final String XtCVisualBell = (String)"VisualBell";
	/// <i>native declaration : widget.h</i>
	public static final String XtNcursorColor = (String)"cursorColor";
	/// <i>native declaration : widget.h</i>
	public static final String XtNpointerColor = (String)"pointerColor";
	/// <i>native declaration : widget.h</i>
	public static final String XtNinitialGeometry = (String)"initialGeometry";
	/// <i>native declaration : widget.h</i>
	public static final String XtNgeometry = (String)"geometry";
	/// <i>native declaration : widget.h</i>
	public static final String XtNinternalBorderWidth = (String)"internalBorderWidth";
	/// <i>native declaration : widget.h</i>
	public static final String XtNtextPointer = (String)"textPointer";
	/// <i>native declaration : widget.h</i>
	public static final String XtNunsplittable = (String)"unsplittable";
	/// <i>native declaration : widget.h</i>
	public static final String XtNminibuffer = (String)"minibuffer";
	/// <i>native declaration : widget.h</i>
	public static final String XtNforeground = (String)"foreground";
	/// <i>native declaration : widget.h</i>
	public static final String XtCBellVolume = (String)"BellVolume";
	/// <i>native declaration : widget.h</i>
	public static final String XtNfont = (String)"font";
	/**
	 * Special entry points<br>
	 * Original signature : <code>void EmacsFrameSetCharSize(int, int)</code><br>
	 * <i>native declaration : widget.h:9</i>
	 */
	public static native void EmacsFrameSetCharSize(int int1, int int2);
	/**
	 * Original signature : <code>void widget_store_internal_border(Widget)</code><br>
	 * <i>native declaration : widget.h:11</i>
	 */
	public static native void widget_store_internal_border(WidgetLibrary.Widget widget);
	/**
	 * Original signature : <code>void widget_update_wm_size_hints(Widget)</code><br>
	 * <i>native declaration : widget.h:13</i>
	 */
	public static native void widget_update_wm_size_hints(WidgetLibrary.Widget widget);
	/// C type : extern _DisplayContext*
	public Pointer<WidgetLibrary._DisplayContext > display_context() {
		try {
			return (Pointer<WidgetLibrary._DisplayContext >)BridJ.getNativeLibrary("widget").getSymbolPointer("display_context").as(DefaultParameterizedType.paramType(Pointer.class, WidgetLibrary._DisplayContext.class)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// C type : extern _DisplayContext*
	public WidgetLibrary display_context(Pointer<WidgetLibrary._DisplayContext > display_context) {
		try {
			{
				BridJ.getNativeLibrary("widget").getSymbolPointer("display_context").as(DefaultParameterizedType.paramType(Pointer.class, WidgetLibrary._DisplayContext.class)).set(display_context);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// Undefined type
	/// Undefined type
	public static interface WidgetClass {
		
	};
	/// Undefined type
	/// Undefined type
	public static interface Widget {
		
	};
	/// Undefined type
	/// Undefined type
	public static interface _DisplayContext {
		
	};
}
