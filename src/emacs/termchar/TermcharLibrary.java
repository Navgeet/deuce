package emacs.termchar;
import org.bridj.BridJ;
import org.bridj.CRuntime;
import org.bridj.Pointer;
import org.bridj.ann.Library;
import org.bridj.ann.Runtime;
import org.bridj.util.DefaultParameterizedType;
/**
 * Wrapper for library <b>termchar</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("termchar") 
@Runtime(CRuntime.class) 
public class TermcharLibrary {
	static {
		BridJ.register();
	}
	/**
	 * A chain of structures for all tty devices currently in use.<br>
	 * C type : extern tty_display_info*
	 */
	public Pointer<tty_display_info > tty_list() {
		try {
			return (Pointer<tty_display_info >)BridJ.getNativeLibrary("termchar").getSymbolPointer("tty_list").as(DefaultParameterizedType.paramType(Pointer.class, tty_display_info.class)).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/**
	 * A chain of structures for all tty devices currently in use.<br>
	 * C type : extern tty_display_info*
	 */
	public TermcharLibrary tty_list(Pointer<tty_display_info > tty_list) {
		try {
			{
				BridJ.getNativeLibrary("termchar").getSymbolPointer("tty_list").as(DefaultParameterizedType.paramType(Pointer.class, tty_display_info.class)).set(tty_list);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	/// Undefined type
	/// Undefined type
	public static interface emacs_tty {
		
	};
	/// Undefined type
	/// Undefined type
	public static interface frame {
		
	};
	/// Undefined type
	/// Undefined type
	public static interface cm {
		
	};
	/// Undefined type
	/// Undefined type
	public static interface terminal {
		
	};
	/// Undefined type
	/// Undefined type
	public static interface FILE {
		
	};
	/// Undefined type
	/// Undefined type
	public static interface Mouse_HLInfo {
		
	};
	/// Undefined type
	/// Undefined type
	public static interface Lisp_Object {
		
	};
}
