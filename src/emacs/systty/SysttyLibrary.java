package emacs.systty;
import org.bridj.BridJ;
import org.bridj.CRuntime;
import org.bridj.Pointer;
import org.bridj.ann.Library;
import org.bridj.ann.Runtime;
/**
 * Wrapper for library <b>systty</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("systty") 
@Runtime(CRuntime.class) 
public class SysttyLibrary {
	static {
		BridJ.register();
	}
	/// <i>native declaration : systty.h</i>
	public static final char CDISABLE = (char)'\0';
	/**
	 * From sysdep.c or w32.c<br>
	 * Original signature : <code>int serial_open(char*)</code><br>
	 * <i>native declaration : systty.h:1408</i>
	 */
	public static native int serial_open(Pointer<Byte > charPtr1);
	/**
	 * Original signature : <code>void serial_configure(Lisp_Process*)</code><br>
	 * <i>native declaration : systty.h:1410</i>
	 */
	public static native void serial_configure(Pointer<SysttyLibrary.Lisp_Process > Lisp_ProcessPtr1);
	/// Undefined type
	/// Undefined type
	public static interface Lisp_Process {
		
	};
	/// Undefined type
	/// Undefined type
	public static interface termios {
		
	};
}
